<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.imooc.mapper.ItemsMapperCustom">
    <select id="queryItemComments" resultType="com.imooc.vo.ItemCommentVO">
        SELECT
        ic.comment_level as commentLevel,
        ic.content as content,
        ic.sepc_name as specName,
        ic.created_time as createTime,
        ic.user_face as userFace,
        ic.user_fake_nickname as nickname
        FROM
        items_comments ic
        WHERE
        ic.item_id = #{itemId}
        <if test="level != null and level != ''">
            AND  ic.comment_level = #{level}
        </if>
    </select>

    <select id="searchItem" resultType="com.imooc.vo.SearchItemVO">
        select
            i.id as itemId,
            i.item_name as itemName,
            i.sell_counts as sellCounts,
            ii.url as imgUrl,
            temp_item.price_discount as price
        from
            items as i
        left join
            items_img as ii
        on
                i.id = ii.item_id
        left join
            (
                select item_id, MIN(price_discount) as price_discount from items_spec group by item_id
            ) as temp_item
        on
                i.id = temp_item.item_id
        where
            ii.is_main = 1
            <if test="keywords != null and keywords != ''">
                AND  i.item_name like '%${keywords}%'
            </if>
        order by
            <choose>
                <when test="sort == &quot;c&quot;">
                    i.sell_counts desc
                </when>
                <when test="sort == &quot;p&quot;">
                    temp_item.price_discount asc
                </when>
                <otherwise>
                    i.item_name asc
                </otherwise>
            </choose>
    </select>
    
    <select id="searchCatItems" resultType="com.imooc.vo.SearchItemVO">
        select
        i.id as itemId,
        i.item_name as itemName,
        i.sell_counts as sellCounts,
        ii.url as imgUrl,
        temp_item.price_discount as price
        from
        items as i
        left join
        items_img as ii
        on
        i.id = ii.item_id
        left join
        (
        select item_id, MIN(price_discount) as price_discount from items_spec group by item_id
        ) as temp_item
        on
        i.id = temp_item.item_id
        where
        ii.is_main = 1
        <if test="catId != null and catId != ''">
            AND  i.cat_id like '%${catId}%'
        </if>
        order by
        <choose>
            <when test="sort == &quot;c&quot;">
                i.sell_counts desc
            </when>
            <when test="sort == &quot;p&quot;">
                temp_item.price_discount asc
            </when>
            <otherwise>
                i.item_name asc
            </otherwise>
        </choose>
    </select>
    
    <select id="queryItemBySpecIds" parameterType="list" resultType="com.imooc.vo.ItemSpecIdsVO">
        select
            i.id AS itemId,
            i.item_name AS itemName,
            ii.url AS itemImgUrl,
            isp.id AS specId,
            isp.`name` AS specName,
            isp.price_discount AS priceDiscount,
            isp.price_normal AS priceNormal
        from
             items_spec as isp
        left join
            items_img as ii
        on isp.item_id = ii.item_id
        left join
            items as i
        on isp.item_id = i.id
        where
            ii.is_main = 1 and isp.id in
            <foreach collection="specIdsList" index="index" item="specId" open="(" separator="," close=")">
                #{specId}
            </foreach>
    </select>
</mapper>